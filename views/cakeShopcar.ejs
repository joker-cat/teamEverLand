<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css'>
    <!-- <link rel="stylesheet" href="/CSS/font-awesome-4.7.0/css/font-awesome.css"> -->


    <!-- font awesome pro link below -->
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.2.0/css/all.css">

    <!-- bootstrap 5-->
    <!-- <link rel="stylesheet" href="/build/_css/bootstrap.min.css">
    <script src="/build/_js/bootstrap.bundle.min.js"></script>
    <script src="/build/_js/popper.min.js"></script>
    <script src="/build/_js/bootstrap.min.js"></script> -->

    <!-- JQUERY 3.4.1 -->
    <script src="/build/_js/jquery-3.4.1.js"></script>

    <!-- sweet alert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


    <!-- VUE 3-->
    <!-- <script src="https://unpkg.com/vue@next"></script> -->

    <!-- axios-->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <!-- 共用 -->
    <link rel="stylesheet" href="/stylesheets/signinNavbar.css">
    <!-- 吐司共用 -->
    <link rel="stylesheet" href="/stylesheets/jquery.toast.css">

    <!-- 自己 -->
    <link rel="stylesheet" href="/stylesheets/cakeShop/cakeShopcar.css">
    <title>Document</title>
</head>

<body>
    
    <div class="card">
        <!-- 暫存用 利於抓取session -->
        <input type="hidden" id="inputhidden" value="<%= userName %>">

        <div class="row">
            <div class="col-12 cart">
                <div class="title">
                    <div class="row">
                        <div class="col">
                            <h4><b style="font-size: 1.8rem;">
                                    <%= userMyname %>'s 餐車
                                </b></h4>
                        </div>
                        <div class="col" style="font-size: 1.4rem;">{{shopdataLength}} 筆</div>
                    </div>
                </div>
                <div id="products">
                    <ul>
                        <li v-for="(item,index) in userproductinfo">
                            <div class="row main align-items-center">
                                <input type="checkbox" v-model="checkedNames" :value="index" class="check"
                                    :data-check="item.serialnumber">
                                <div class="col">
                                    <div class="imgset"
                                        v-bind:style="{backgroundImage:'url(/images/cakeShop/' + item.imgpath + ')'}">
                                    </div>
                                </div>
                                <div class="col">{{item.foodname}}</div>
                                <div class="col">
                                    <a @click="dec(index)">-</a>
                                    <a class="border">{{item.productscount}}</a>
                                    <a @click="inc(index)">+</a>
                                </div>
                                <div class="col">售價: {{item.foodprice * item.productscount}}</div>
                                <div class="col">
                                    <i class="far fa-trash-alt" @click="del(item.serialnumber,index)"
                                        aria-hidden="true"></i>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
                <div class="col-3 summary">
                    <div class="back-to-shop"><a href="/cakeShop">&leftarrow;</a><span class="text-muted">回首頁</span>
                    </div>

                    <div class="row" style="border-top: 1px solid rgba(0,0,0,.1); padding: 2vh 0;font-size: 1.8rem;">
                        <div class="col">總金額</div>
                        <div class="col text-right">$: {{totalprice}}</div>
                    </div>
                    <a :href="shoparrstring">
                        <!--  -->
                        <button class="btn" @click="checkout" :disabled="checkoutbutton">填寫訂餐資料</button>
                    </a>
                </div>
            </div>
        </div>
    </div>
    <!-- <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js'></script>
    <script src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js'></script> -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js"></script>
    <!-- 吐司共用 -->
    <script src="/javascripts/jquery.toast.js"></script>

    <script>
        let vm = new Vue({
            el: '.card',
            data() {
                //聲明型態很重要！！！
                return {
                    'user': $('#inputhidden').val(),
                    'shopdata': '',
                    'numberList': '',
                    'userproductinfo': [],
                    'checkedNames': [],
                    'shoparrtostring': '',
                    'haveclickshopcar': [],
                }
            },
            computed: {
                //組合網址
                shoparrstring() {
                    return '/cakeShop/cakeShopcar/' + this.shoparrtostring;
                },
                //總金額
                totalprice() {
                    let total = 0;
                    this.haveclickshopcar = [];
                    this.checkedNames.forEach(el => {
                        this.haveclickshopcar.push(this.userproductinfo[el]);
                    });
                    this.haveclickshopcar.forEach(el => {
                        total += (el["foodprice"] * el["productscount"]);
                    });
                    return total;
                },
                //資料筆數
                shopdataLength() {
                    return this.userproductinfo.length;
                },
                //判斷是否有勾選
                checkoutbutton() {
                    return (this.checkedNames.length > 0) ? false : true;
                }
            },
            methods: {
                inc(index) {
                    if (this.userproductinfo[index]["productscount"] >= 20) {
                        return
                    }
                    const user = this.user;
                    $.ajax({
                        url: "/cakeShop/lookshopcar",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            'user': user
                        }),
                        success: function (res) {
                            let nowdata = JSON.parse(res);
                            let inc = '';
                            const valueList = nowdata[0]["shopcar"].slice(2, -2); //取出重要字串
                            nowdata = JSON.parse('[' + valueList + ']'); // 手動變json字串並轉json格式
                            inc = parseInt(nowdata[index]["productscount"]) + 1;
                            nowdata[index]["productscount"] = inc + '';

                            $.ajax({
                                url: "/cakeShop/addshopcar",
                                type: "POST",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({
                                    'user': user,
                                    'product': JSON.stringify(nowdata),
                                }),
                                success: function (e) {
                                    let res = JSON.parse(e);
                                    if (res["errno"] == 1) {
                                        vm.userproductinfo[index]["productscount"] =
                                            (parseInt(vm.userproductinfo[index]["productscount"]) + 1) + '';
                                    } else {
                                        return
                                    }
                                },
                                error: function (err) {
                                    console.log(err);
                                }
                            })
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    })
                },
                dec(index) {
                    if (this.userproductinfo[index]["productscount"] <= 0) {

                        return
                    }
                    const user = this.user;

                    $.ajax({
                        url: "/cakeShop/lookshopcar",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            'user': user
                        }),
                        success: function (res) {
                            let nowdata = JSON.parse(res);
                            let inc = '';
                            const valueList = nowdata[0]["shopcar"].slice(2, -2); //取出重要字串
                            nowdata = JSON.parse('[' + valueList + ']'); // 手動變json字串並轉json格式
                            inc = parseInt(nowdata[index]["productscount"]) - 1;
                            nowdata[index]["productscount"] = inc + '';

                            $.ajax({
                                url: "/cakeShop/addshopcar",
                                type: "POST",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({
                                    'user': user,
                                    'product': JSON.stringify(nowdata),
                                }),
                                success: function (e) {
                                    let res = JSON.parse(e);
                                    if (res["errno"] == 1) {
                                        vm.userproductinfo[index]["productscount"] =
                                            (parseInt(vm.userproductinfo[index]["productscount"]) - 1) + '';
                                    } else {
                                        return
                                    }
                                },
                                error: function (err) {
                                    console.log(err);
                                }
                            })
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    })
                },
                del(serialnumber, index) {
                    console.log(serialnumber, index);
                    const user = this.user;
                    this.checkedNames = [];
                    // let where = this.checkedNames.indexOf(index);
                    // if (where > -1) {
                    //     this.haveclickshopcar.splice(where, 1);
                    //     this.checkedNames.splice(where, 1);
                    // }
                    // console.log(where);
                    // return
                    // this.checkedNames.forEach(ev => {

                    // });
                    $.ajax({
                        url: "/cakeShop/lookshopcar",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            'user': user
                        }),
                        success: function (res) {
                            let nowdata = JSON.parse(res);
                            const valueList = nowdata[0]["shopcar"].slice(2, -2); //取出重要字串
                            nowdata = JSON.parse('[' + valueList + ']'); // 手動變json字串並轉json格式
                            nowdata.splice(index, 1) // 移除指定元素
                            $.ajax({
                                url: "/cakeShop/addshopcar",
                                type: "POST",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({
                                    'user': user,
                                    'product': JSON.stringify(nowdata),
                                }),
                                success: function (e) {
                                    let res = JSON.parse(e);
                                    if (res["errno"] == 1) {
                                        // showToast('成功移除購物車');
                                        Swal.fire({
                                            position: 'center',
                                            icon: 'success',
                                            title: '成功移除商品',
                                            showConfirmButton: false,
                                            timer: 1200
                                        })
                                        vm.userproductinfo.splice(index, 1);
                                        // vm.checkedNames = vm.checkedNames.filter(item => item != serialnumber); // 篩選也等於移除
                                        vm.numberList = vm.numberList.filter(item => item != serialnumber);
                                        vm.shopdata = vm.shopdata.filter(item => item["clicknum"] != serialnumber);
                                    } else {
                                        return
                                    }
                                },
                                error: function (err) {
                                    console.log(err);
                                }
                            })
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    })
                },
                checkout() { //想辦法自創編碼
                    let shoparr = this.haveclickshopcar.map(item => Object.values(item)[0] - 0);
                    console.log(shoparr);

                    // 將陣列逐一抓出=>轉8進制=>組合成字串=>過濾掉','替換成隨機大寫英文
                    this.shoparrtostring = shoparr.map(every => every.toString(8))
                        .toString()
                        .replace(/,/g, function () {
                            return String.fromCharCode(vm.getRandom(65, 90))
                        });
                    console.log(this.shoparrtostring);
                },
                //產生min到max之間的亂數
                getRandom(min, max) {
                    return Math.floor(Math.random() * (max - min + 1)) + min;
                }
            },
            created() {
                // 先去抓取現有的資料
                const user = this.user;
                // const clicknum = e.currentTarget.getAttribute("data-num");
                $.ajax({
                    url: "/cakeShop/lookshopcar",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({
                        'user': user
                    }),
                    success: function (res) {
                        console.log(res);
                        let usershopdata = JSON.parse(res);
                        // console.log(usershopdata);
                        let numberList = ''; // 購物車產品編號陣列
                        if (usershopdata[0]["shopcar"] == '') { // 判斷是否為空並移除空值
                            usershopdata = [];
                            vm.numberList = usershopdata.map(item => Object.values(item)[0]);
                            vm.shopdata = usershopdata;
                            return
                        } else {
                            const valueList = usershopdata[0]["shopcar"].slice(2, -2); //取出重要字串
                            let userarr = '';
                            usershopdata = JSON.parse('[' + valueList + ']'); // 手動變json字串並轉json格式
                            vm.numberList = usershopdata.map(item => Object.values(item)[0]); //抓value值
                            vm.shopdata = usershopdata; //整體資料

                            // 二次搜尋，抓取比對並塞入物件
                            userarr = vm.numberList.toString();

                            $.ajax({
                                url: "/cakeShop/usershopcar",
                                type: "POST",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({
                                    'userarr': userarr
                                }),
                                success: function (res) {
                                    // console.log(res);
                                    const willpushobject = JSON.parse(res);
                                    // console.log(willpushobject.length);
                                    let arr = [];
                                    $.each(willpushobject, (index, it) => {
                                        let newobj = Object.assign({}, vm.shopdata[index], it); // 物件合併，在參數中設定空物件可以不讓原物件遭到改寫
                                        arr.push(newobj);
                                        // console.log(newobj);
                                    })
                                    vm.userproductinfo = arr;
                                },
                                error: function (err) {
                                    console.log(err);
                                }
                            })
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                })
            },
            mounted() {

            }
        })
        //toast
    //     function showToast(heading, message) {
    //         console.log(heading, message);
    //         $.toast({
    //             text: message, // Text that is to be shown in the toast
    //             heading: heading, // Optional heading to be shown on the toast
    //             icon: 'warning', // Type of toast icon
    //             showHideTransition: 'fade', // fade, slide or plain
    //             allowToastClose: true, // Boolean value true or false
    //             hideAfter: 3000, // false to make it sticky or number representing the miliseconds as time after which toast needs to be hidden
    //             stack: 5, // false if there should be only one toast at a time or a number representing the maximum number of toasts to be shown at a time
    //             position: 'top-center', // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values
    //             textAlign: 'left',  // Text alignment i.e. left, right or center
    //             loader: true,  // Whether to show loader or not. True by default
    //             loaderBg: '#9ec600',  // Background color of the toast loader
    //             beforeShow: function () { }, // will be triggered before the toast is shown
    //             afterShown: function () { }, // will be triggered after the toat has been shown
    //             beforeHide: function () { }, // will be triggered before the toast gets hidden
    //             afterHidden: function () { }  // will be triggered after the toast has been hidden
    //         });
    //     }
    </script>
</body>

</html>

<!-- 刪除要連存放勾選的也一起刪 -->

<!-- sql語法 連續執行多行 這邊要用join 或是 in 
抓取使用者加入購物的產品編號，並利用編號獲得產品所有資訊 -->
<!-- created先抓篩選購物車的食物編號 mounted在顯示購物清單 -->